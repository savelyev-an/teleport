#!/bin/sh
( flock -n 9 || exit 1;
  if test -f /usr/local/bin/teleport; then
          exit 0
  fi

  distro_id="$(awk -F= '$1 == "ID" { print tolower($2) }' /etc/os-release | xargs echo)"
  if [ "$distro_id" = "debian" ] || [ "$distro_id" = "ubuntu" ]; then
          sudo curl https://deb.releases.teleport.dev/teleport-pubkey.asc \
                   -o /usr/share/keyrings/teleport-archive-keyring.asc
          echo "deb [signed-by=/usr/share/keyrings/teleport-archive-keyring.asc] https://deb.releases.teleport.dev/ stable main" \
                  | sudo tee /etc/apt/sources.list.d/teleport.list > /dev/null

          sudo apt-get update
          sudo apt-get install -y teleport jq
  elif [ "$distro_id" = "amzn" ] || [ "$distro_id" = "rhel" ]; then
          sudo yum-config-manager --add-repo 'https://rpm.releases.teleport.dev/teleport.repo'
          sudo yum install -y teleport jq
  fi

  INSTANCE_INFO="$(curl http://169.254.169.254/latest/dynamic/instance-identity/document)"

  ACCOUNT_ID="$(echo "$INSTANCE_INFO" | jq -r .accountId)"
  INSTANCE_ID="$(echo "$INSTANCE_INFO" | jq -r .instanceId)"

  # generate teleport ssh config
  # token is read as a parameter from the AWS ssm script run and
  # passed as the first argument to the script
  /usr/local/bin/teleport node configure \
                   --auth-server="{{ .AuthServer }}" \
                   --join-method=iam \
                   --token="$1" \
                   --node-name="${ACCOUNT_ID}-${INSTANCE_ID}" | sudo tee "/etc/teleport.yaml"

  # enable and start teleport service
  sudo systemctl enable --now teleport

) 9>/var/lock/teleport_install.lock
